Automatically generated by Mendeley Desktop 1.17.12
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@article{Adenowo2013,
abstract = {This paper discusses two main software engineering methodologies to system development, the waterfall model and the object- oriented approach. A review of literature reveals that waterfall model uses linear approach and is only suitable for sequential or procedural design. In waterfall, errors can only be detected at the end of the whole process and it may be difficult going back to repeat the entire process because the processes are sequential. Also, software based on waterfall approach is difficult to maintain and upgrade due to lack of integration between software components. On the other hand, the Object Oriented approach enables software systems to be developed as integration of software objects that work together to make a holistic and functional system. The software objects are independent of each other, allowing easy upgrading and maintenance of software codes. The paper also highlighted the merits and demerits of each of the approaches. This work concludes with the appropriateness of each approach in relation to the complexity of the problem domain.},
author = {Adenowo, Adetokunbo A A and Adenowo, Basirat A},
file = {:C$\backslash$:/Users/45109/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Adenowo, Adenowo - 2013 - Software Engineering Methodologies A Review of the Waterfall Model and Object- Oriented Approach.pdf:pdf},
issn = {2229-5518},
journal = {International Journal of Scientific {\&} Engineering Research},
keywords = {Object-oriented Approach,Software,Software Engineering,Software Engineering Methodologies,Software Objects,Traditional       Approach,Waterfall Model},
number = {7},
pages = {427--434},
title = {{Software Engineering Methodologies: A Review of the Waterfall Model and Object-Oriented Approach}},
url = {http://www.ijser.org http://www.ijser.org/researchpaper{\%}5CSoftware-Engineering-Methodologies-A-Review-of-the-Waterfall-Model-and-ObjectOriented-Approach.pdf},
volume = {4},
year = {2013}
}
@article{Dyba2005,
abstract = {Most software engineering research implicitly assumes that development methodologies are useful and that there is a direct relationship between software methodologies and their effects on organizational performance. However, a methodology cannot have an impact if it is not used. The purpose of this paper is, thus, to raise a number of challenges related to the conceptualization and Operationalization of methodology usage and to report on a study that compared subjective and objective operationalizations of usage. Results of regression analyses show that these operationalizations do not appear to be strongly related. While self-reported usage is related to self-reported measures of the independent variables of methodology acceptance in the study, the objective and computer-recorded measures show different and distinctly weaker links. There are several explanations to these seemingly contradictory results. Most importantly, the results of this study suggest a need for reconceptualization and better validation of methodology usage constructs in future, empirical software engineering research.},
author = {Dyb{\aa}, Tore and Moe, Nils B. and Arisholm, Erik},
doi = {10.1109/ISESE.2005.1541852},
file = {:D$\backslash$:/Rosa/94/CW3/01541852.pdf:pdf},
isbn = {0780395085},
journal = {2005 International Symposium on Empirical Software Engineering, ISESE 2005},
keywords = {Conceptualization,Empirical Software Engineering,Measurement,Methodology usage,Operationalization,Technology acceptance},
number = {7465},
pages = {447--457},
title = {{Measuring software methodology usage: Challenges of conceptualization and operationalization}},
year = {2005}
}
@book{Palmer2002,
abstract = {Feature Driven Development (FDD), created by Peter Coad and Jeff de Luca, combines the compelling advantages of agile methodologies with model-driven techniques that scale to the largest teams and projects. This book demonstrates FDD at work in real-world projects, giving project leaders all the information they need to successfully apply it in their own organizations. The authors begin by introducing FDD's goals and rationale, and the compelling advantages of its model-driven, short-iteration approach to software development. You'll discover which types of projects FDD is best suited for; and understand FDD's roles, artifacts, goals, and timelines. The book includes practical, hands-on coverage of all five key FDD activities: developing an overall model, building a feature list, "plan by feature," "design by feature," and "build by feature." The book also offers specific guidance on adapting FDD to many different types of projects.},
author = {Palmer, S. R. and Felsing, J. M.},
booktitle = {Prentice Hall International},
doi = {978-0130676153},
isbn = {0130676152},
pages = {304},
publisher = {Prentice Hall PTR},
title = {{A Practical Guide to Feature-Driven Development}},
url = {http://dl.acm.org/citation.cfm?id=600044},
year = {2002}
}
@article{Wu2011,
abstract = {In this survey paper, the terms software engineering and software methodologies are studied through tracing the recent IEEE's International Conference in Software Engineering from 2006 on and IEEE Software magazine articles including its 25th anniversary recommendation of 35 top-pick articles listed in Jan/Feb 2009 issue. The question stipulated throughout the paper is the following: is software engineering a true engineering discipline? Mary Shaw brought up this question in her top-pick article in Software's December 1990 issue where she wrote, “Software engineering is not yet a true engineering discipline, but it has the potential to become one. Older engineering fields suggest the character software engineering might have.” By surveying progresses made in software engineering over the last four decades, the paper considers the questions: who are the constituents in the software engineering profession? And what software methodologies do software engineers apply in our professional work? By presenting the current state of software and its development, the paper concludes with a future of software engineering where we—the software development professionals— may go from here.},
author = {Wu, Binghui Helen},
doi = {10.1109/ICIST.2011.5765230},
file = {:D$\backslash$:/Rosa/94/CW3/05765230.pdf:pdf},
isbn = {9781424494408},
journal = {2011 International Conference on Information Science and Technology, ICIST 2011},
pages = {155--162},
title = {{On software engineering and software methodologies a software developer's perspective}},
year = {2011}
}
@inproceedings{Lingrad1981,
abstract = {The methodology proposed is intended to aid in the development of cooperative interactive tools (i.e., those which are natural, helpful, and consistent). Cooperative tools must incorporate knowledge of their own capabilities, limitations, and requirements. This required knowledge of tool functionality is provided by programming the tool in the process script formalism. The process script formalism is a specialized procedural/ declarative language for writing tools. The key aspect of the process script specification of a tool is that, besides being executable, process scripts can be analyzed and understood for the purpose of cooperative interaction with the end user. This paper describes the process script formalism and explains its role in the development of a cooperative interactive system.},
author = {Lingrad, Robert W},
file = {:C$\backslash$:/Users/45109/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Lingard - Unknown - A SOFTWARE METHODOLOGY FOR BUILDING INTERACTIVE TOOLS.pdf:pdf},
isbn = {0-89791-146-6},
issn = {02705257},
pages = {394--399 {\%}! A Software Methodology for Building Int},
title = {{A Software Methodology for Building Interactive Tools}},
url = {http://delivery.acm.org/10.1145/810000/802552/p394-lingard.pdf?ip=137.44.230.171{\&}id=802552{\&}acc=ACTIVE SERVICE{\&}key=4162BB63A75FAC5C.4D4702B0C3E38B35.4D4702B0C3E38B35.4D4702B0C3E38B35{\&}CFID=932406368{\&}CFTOKEN=51478932{\&}{\_}{\_}acm{\_}{\_}=1493940060{\_}a8179444ad22494379d331},
year = {1981}
}
@article{Mahdavi-Hezave2015,
author = {Mahdavi-Hezave, Rezvan and Ramsin, Raman},
doi = {10.5220/0005384202290237},
file = {:D$\backslash$:/Rosa/94/CW3/07320358.pdf:pdf},
isbn = {978-989-758-100-7},
journal = {Proceedings of the 10th International Conference on Evaluation of Novel Approaches to Software Engineering},
keywords = {develop bespoke,feature-driven development,is a branch of,requirements engineering,situational method engineering,sme,software development methodology,software engineering which helps},
pages = {229--237},
title = {{FDMD: Feature-Driven Methodology Development}},
url = {http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0005384202290237},
year = {2015}
}
@article{Redkyn,
abstract = {Waterfall model for software development is still widely used in the industry. In this paper, the brief definition of waterfall model is given, along with the statement of the four shortcomings of this particular model and what has been done over the years to correct these. The author proposes his own modifications to the model, which correct three out of four problems connected with the waterfall model.},
author = {Redkyn, Oleksandr},
file = {:C$\backslash$:/Users/45109/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Redkyn - Unknown - ANALYSIS OF THE WATERFALL MODEL FOR THE SOFTWARE DEVELOPMENT PROCESS AND POSSIBILITIES FOR ITS IMPROVEMENT.pdf:pdf},
title = {{ANALYSIS OF THE WATERFALL MODEL FOR THE SOFTWARE DEVELOPMENT PROCESS AND POSSIBILITIES FOR ITS IMPROVEMENT}},
url = {https://pdfs.semanticscholar.org/9739/a6dc376b71baab78b88a541a03c6a0e94fdb.pdf?{\_}ga=2.57617836.708889661.1493947637-1673270918.1489707296}
}
@article{Goyal2007,
author = {Goyal, Sadhna},
file = {:C$\backslash$:/Users/45109/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Goyal, Schiller - Unknown - Major Seminar On Feature Driven Development Agile Techniques for Project Management and Software Engineer(2).pdf:pdf},
pages = {22},
title = {{Major Seminar On Feature Driven Development}},
url = {https://pdfs.semanticscholar.org/35c8/a718b8c9483d5a3b6dc08dc61036fe0f54e0.pdf?{\_}ga=2.46472807.1590959544.1493942931-1673270918.1489707296 http://csis.pace.edu/{~}marchese/CS616/Agile/FDD/fdd.pdf},
year = {2007}
}
